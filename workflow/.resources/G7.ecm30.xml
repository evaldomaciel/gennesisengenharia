<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>G7</processId>
    </processDefinitionPK>
    <processDescription>G7 - Manutenção de comprovantes</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Financeiro</categoryId>
    <managerEngineAllocationId>Grupo</managerEngineAllocationId>
    <managerEngineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;G7-GESTORES&lt;/Group&gt;&lt;/AssignmentController&gt;</managerEngineAllocationConfiguration>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>1</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>G7 - Manutenção de comprovantes</processId>
      <version>288</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>64381</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>false</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>4</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>100</positionX>
      <positionY>53</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>15</sequence>
      </processStatePK>
      <stateName>Identificação</stateName>
      <stateDescription>Identificação</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>nTask015</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;cTask015&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>597</positionX>
      <positionY>433</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>16</sequence>
      </processStatePK>
      <stateName>Email</stateName>
      <stateDescription>Email</stateDescription>
      <instruction>Envia Emails para os Participantes&#xd;
&#xd;
</instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>597</positionX>
      <positionY>284</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>84</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>21</sequence>
      </processStatePK>
      <stateName>Anexar Comprovante</stateName>
      <stateDescription>Anexar Comprovante</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName>nTask021</deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;cTask021&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>760</positionX>
      <positionY>277</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>29</sequence>
      </processStatePK>
      <stateName>Avaliar Atendimento</stateName>
      <stateDescription>Avaliar Atendimento</stateDescription>
      <instruction></instruction>
      <deadlineTime>28800</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Campo Formulário</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;cTask029&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>910</positionX>
      <positionY>59</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>30</sequence>
      </processStatePK>
      <stateName>Atribuição</stateName>
      <stateDescription>Atribuição</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>190</positionX>
      <positionY>43</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>41</sequence>
      </processStatePK>
      <stateName>Gera PDF</stateName>
      <stateDescription>Gera PDF</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>360</positionX>
      <positionY>43</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>45</sequence>
      </processStatePK>
      <stateName>Tratar erro</stateName>
      <stateDescription>Tratar erro</stateDescription>
      <instruction></instruction>
      <deadlineTime>28800</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Executor Atividade</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;BaseActivity&gt;4&lt;/BaseActivity&gt;&lt;Returns&gt;Last&lt;/Returns&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>200</positionX>
      <positionY>130</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>56</sequence>
      </processStatePK>
      <stateName>Anexar comprovante no processo de origem</stateName>
      <stateDescription>Anexar comprovante no processo de origem</stateDescription>
      <instruction></instruction>
      <deadlineTime>0</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>false</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>0</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>760</positionX>
      <positionY>45</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>82</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>0</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>0</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>0</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>1</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>37</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>250</positionX>
      <positionY>73</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>30</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>44</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>450</positionX>
      <positionY>103</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>41</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>60</sequence>
      </processStatePK>
      <stateName>Intermediário</stateName>
      <stateDescription>Intermediário</stateDescription>
      <instruction>Evento intermediário do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>1</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>true</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>760</positionX>
      <positionY>125</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>43</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <parentSequence>56</parentSequence>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>17</sequence>
      </processStatePK>
      <stateName>Identificado?</stateName>
      <stateDescription>Identificado?</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>620</positionX>
      <positionY>20</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>12</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>1190</positionX>
      <positionY>76</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>6</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <expressionOrder>1</expressionOrder>
        <version>288</version>
        <sequence>17</sequence>
      </conditionProcessStatePK>
      <condition>false</condition>
      <destinationSequenceId>16</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <expressionOrder>2</expressionOrder>
        <version>288</version>
        <sequence>17</sequence>
      </conditionProcessStatePK>
      <condition>false</condition>
      <destinationSequenceId>15</destinationSequenceId>
      <conditionType>1</conditionType>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>19</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>17</initialStateSequence>
      <finalStateSequence>16</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Com identificação</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>20</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>17</initialStateSequence>
      <finalStateSequence>15</finalStateSequence>
      <returnLabel></returnLabel>
      <name>Sem Identificação</name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>22</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>16</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>34</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>29</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>true</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>35</linkSequence>
      </processLinkPK>
      <actionLabel>2 - Finaliza fluxo</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>29</initialStateSequence>
      <finalStateSequence>12</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>39</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>15</initialStateSequence>
      <finalStateSequence>16</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>40</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>15</initialStateSequence>
      <finalStateSequence>29</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>46</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>37</initialStateSequence>
      <finalStateSequence>45</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>47</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>44</initialStateSequence>
      <finalStateSequence>45</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>50</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>4</initialStateSequence>
      <finalStateSequence>30</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>51</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>30</initialStateSequence>
      <finalStateSequence>41</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>53</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>45</initialStateSequence>
      <finalStateSequence>30</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>54</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>45</initialStateSequence>
      <finalStateSequence>30</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>true</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>55</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>41</initialStateSequence>
      <finalStateSequence>17</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>57</linkSequence>
      </processLinkPK>
      <actionLabel>1 - Testar integração</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>21</initialStateSequence>
      <finalStateSequence>56</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>61</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>60</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>62</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>56</initialStateSequence>
      <finalStateSequence>29</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <linkSequence>63</linkSequence>
      </processLinkPK>
      <actionLabel>1 - Anexar novamente</actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>29</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId) {&#xd;
    log.info(&quot;Inicio afterProcessCreate processo G7&quot;);&#xd;
    hAPI.setCardValue(&quot;status&quot;, 0);&#xd;
    hAPI.setCardValue(&quot;processInstanceId&quot;, getValue(&apos;WKNumProces&apos;));&#xd;
&#xd;
    // Coletar dados restantes do RM&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterStateEntry</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterStateEntry(sequenceId) {&#xd;
    if (sequenceId == 16) {&#xd;
        try {&#xd;
            var assunto = hAPI.getCardValue(&quot;processo_origem&quot;) + &quot; - &quot; + hAPI.getCardValue(&quot;solicitacao_origem&quot;) + &quot; - Comprovante de Pagamento&quot;;&#xd;
&#xd;
            // Coleta e-mail&#xd;
            if (hAPI.getCardValue(&apos;processo_origem&apos;) == &quot;G5&quot;) {&#xd;
                var ds_G5 = DatasetFactory.getDataset(&apos;ds_G5&apos;,&#xd;
                    new Array(&apos;email_solicitante&apos;, &apos;copia_email_solicitante&apos;),&#xd;
                    new Array(&#xd;
                        DatasetFactory.createConstraint(&apos;sqlLimit&apos;, &apos;1&apos;, &apos;1&apos;, ConstraintType.MUST),&#xd;
                        DatasetFactory.createConstraint(&apos;numero_solicitacao&apos;, hAPI.getCardValue(&quot;solicitacao_origem&quot;), hAPI.getCardValue(&quot;solicitacao_origem&quot;), ConstraintType.MUST)&#xd;
                    ),&#xd;
                    null&#xd;
                );&#xd;
&#xd;
                if (ds_G5 &amp;&amp; ds_G5.rowsCount &gt; 0) {&#xd;
                    hAPI.setCardValue(&apos;email_solicitante&apos;, ds_G5.getValue(0, &apos;email_solicitante&apos;));&#xd;
                    hAPI.setCardValue(&apos;copia_email_solicitante&apos;, ds_G5.getValue(0, &apos;copia_email_solicitante&apos;));&#xd;
                }&#xd;
            } else if (hAPI.getCardValue(&apos;processo_origem&apos;) == &quot;G3&quot;) {&#xd;
                var ds_G3 = DatasetFactory.getDataset(&apos;DSG3&apos;,&#xd;
                    new Array(&apos;nomeComprador&apos;),&#xd;
                    new Array(&#xd;
                        DatasetFactory.createConstraint(&apos;sqlLimit&apos;, &apos;1&apos;, &apos;1&apos;, ConstraintType.MUST),&#xd;
                        DatasetFactory.createConstraint(&apos;IdentificadorFluig&apos;, hAPI.getCardValue(&quot;solicitacao_origem&quot;), hAPI.getCardValue(&quot;solicitacao_origem&quot;), ConstraintType.MUST)&#xd;
                    ),&#xd;
                    null&#xd;
                );&#xd;
&#xd;
                if (ds_G3 &amp;&amp; ds_G3.rowsCount &gt; 0) {&#xd;
                    // Coleta Email por nome do comprador&#xd;
                    hAPI.setCardValue(&apos;nomeComprador&apos;, ds_G3.getValue(0, &apos;nomeComprador&apos;));&#xd;
                    var userEmail = hAPI.getCardValue(&quot;nomeComprador&quot;);&#xd;
                    var c1 = DatasetFactory.createConstraint(&apos;login&apos;, userEmail, userEmail, ConstraintType.MUST);&#xd;
                    var dataset = DatasetFactory.getDataset(&quot;colleague&quot;, null, [c1], null);&#xd;
                    hAPI.setCardValue(&quot;email_solicitante&quot;, dataset.getValue(0, &quot;mail&quot;));&#xd;
                }&#xd;
            }&#xd;
&#xd;
            var destinatarios = new Array();&#xd;
            if (hAPI.getCardValue(&quot;email_solicitante&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;email_solicitante&quot;) != null) destinatarios.push(hAPI.getCardValue(&quot;email_solicitante&quot;));&#xd;
            if (hAPI.getCardValue(&quot;copia_email_solicitante&quot;) != &quot;&quot; &amp;&amp; hAPI.getCardValue(&quot;copia_email_solicitante&quot;) != null) destinatarios.push(hAPI.getCardValue(&quot;copia_email_solicitante&quot;));&#xd;
&#xd;
            log.dir(destinatarios);&#xd;
            log.info(&apos;o e-mail == &apos; + destinatarios);&#xd;
&#xd;
            // Recuperando os anexos&#xd;
            var anexos = hAPI.listAttachments();&#xd;
            var anexo = anexos.get(0);&#xd;
            var documentId = anexo.getDocumentId();&#xd;
&#xd;
            // Coletar o link de download do PDF&#xd;
            try {&#xd;
                var clientService = fluigAPI.getAuthorizeClientService();&#xd;
                var url = documentId;&#xd;
                var data = {&#xd;
                    companyId: getValue(&apos;WKCompany&apos;) + &apos;&apos;,&#xd;
                    serviceCode: &apos;downloadDocument&apos;,&#xd;
                    endpoint: encodeURI(url),&#xd;
                    method: &apos;get&apos;,&#xd;
                    options: {&#xd;
                        encoding: &apos;UTF-8&apos;,&#xd;
                        mediaType: &apos;application/json&apos;&#xd;
                    }&#xd;
                };&#xd;
&#xd;
                var response = clientService.invoke(JSON.stringify(data));&#xd;
                var result = response.getResult();&#xd;
                var jsonResponse = JSON.parse(result);&#xd;
                log.info(&quot;Resposta da API: &quot; + JSON.stringify(jsonResponse));&#xd;
&#xd;
                // Verifica o status da resposta&#xd;
                if (jsonResponse.success != false) {&#xd;
                    // Coleta o PDF&#xd;
                    var PDF = jsonResponse.content;&#xd;
                    log.info(&quot;Conteúdo: &quot; + PDF);&#xd;
                } else {&#xd;
                    log.error(&quot;Erro na requisição: &quot; + jsonResponse);&#xd;
                }&#xd;
            } catch (e) {&#xd;
                log.error(&quot;Erro ao fazer a requisição GET: &quot; + e);&#xd;
            }&#xd;
&#xd;
            var msg = &apos;&apos;;&#xd;
            msg += &apos;&lt;html&gt;&apos;&#xd;
            msg += &apos;	&lt;body&gt;&apos;&#xd;
            msg += &apos;	&lt;h2&gt; Olá, &apos; + getColleagueName(getValue(&quot;WKUser&quot;)) + &apos;&lt;/h2&gt;&apos;;&#xd;
            msg += &apos;	&lt;p&gt; Segue o comprovante de pagamento realizado no processo &lt;b&gt;&apos; + hAPI.getCardValue(&quot;processo_origem&quot;) + &apos;&lt;/b&gt;, solicitação &lt;a href=&quot;https://gennesisengenharia160517.fluig.cloudtotvs.com.br:1650/portal/p/1/pageworkflowview?app_ecm_workflowview_detailsProcessInstanceID=&apos; + hAPI.getCardValue(&quot;solicitacao_origem&quot;) + &apos;&quot;&gt;&lt;b&gt;&apos; + hAPI.getCardValue(&quot;solicitacao_origem&quot;) + &apos;&lt;/b&gt;&lt;/a&gt;:&lt;/p&gt;&apos;;&#xd;
            msg += &apos;	&lt;a href=&quot;&apos; + PDF + &apos;&quot; download&gt;Vizualizar PDF&lt;/a&gt;&apos;;&#xd;
            msg += &apos;	&lt;/body&gt;&apos;&#xd;
            msg += &apos;&lt;/html&gt;&apos;&#xd;
&#xd;
            var obj = new com.fluig.foundation.mail.service.EMailServiceBean();&#xd;
&#xd;
            for (var x = 0; x &lt; destinatarios.length; x++) {&#xd;
                obj.simpleEmail(1, assunto, &quot;suportefluig@engpac.com.br&quot;, destinatarios[x], msg, &quot;text/html&quot;);&#xd;
                log.info(&quot;Email enviado com sucesso!&quot;);&#xd;
            }&#xd;
        } catch (err) {&#xd;
            log.error(err);&#xd;
            throw (err);&#xd;
        }&#xd;
    }&#xd;
}&#xd;
&#xd;
function getColleagueName(user) {&#xd;
    var const1 = DatasetFactory.createConstraint(&quot;colleaguePK.colleagueId&quot;, user, user, ConstraintType.MUST);&#xd;
    var datasetAttachment = DatasetFactory.getDataset(&quot;colleague&quot;, null, [const1], null);&#xd;
    if (datasetAttachment.rowsCount &gt; 0) return datasetAttachment.getValue(0, &quot;colleagueName&quot;);&#xd;
    return user;&#xd;
}&#xd;
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessFinish</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessFinish(processId) {&#xd;
	hAPI.setCardValue(&quot;status&quot;, 2);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterCancelProcess</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterCancelProcess(colleagueId, processId) {&#xd;
	hAPI.setCardValue(&quot;status&quot;, 1);&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask56</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask56(attempt, message) {
	var solAnexarDoc;
	var processId;
	var valorOriginal = 0;

	var numSolOrigem = parseInt(hAPI.getCardValue(&apos;solicitacao_origem&apos;));

	try {

		var attachmentList = hAPI.listAttachments();

		if (numSolOrigem &gt; 0) {
			/** Vamos descobrir se vem do G3/G4 ou G5 */

			var solOrigem = getSourceProcess(numSolOrigem)

			if (solOrigem &amp;&amp; solOrigem.getValue(0, &quot;processId&quot;) == &quot;G3&quot;) {
				processId = &quot;G3&quot;;
				var solG3 = getG3(numSolOrigem);
				if (solG3) solAnexarDoc = parseInt(solG3.getValue(0, &apos;IdentificadorFluigAnexo&apos;));
			}

			else if (solOrigem &amp;&amp; solOrigem.getValue(0, &quot;processId&quot;) == &quot;G4&quot;) {
				processId = &quot;G4&quot;;
				solAnexarDoc = numSolOrigem;
			}
			else if (solOrigem &amp;&amp; solOrigem.getValue(0, &quot;processId&quot;) == &quot;G5&quot;) {
				processId = &quot;G5&quot;;
				solAnexarDoc = numSolOrigem;
			}

			if (solAnexarDoc &gt; 0) {

				var movSeq = getMovementSeq(solAnexarDoc);
				var processDetail = getSourceProcess(solAnexarDoc);
				var docDetails = getDocDetails(processDetail.getValue(0, &apos;cardDocumentId&apos;));

				var cardData = hAPI.getCardData(solAnexarDoc);
				var keys = cardData.keySet().toArray();
				var fieldsAndValues = [];
				var attachmentsListBody = [];


				log.info(&quot;------ cardData ------ &quot;);
				log.dir(cardData)

				log.info(&quot;------ keys ------ &quot;);
				log.dir(keys)

				for (var key in keys) {
					var fieldName = keys[key];

					/** Removendo campos existentes de anexos */
					if (fieldName.indexOf(&apos;dataPagamento___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;fdMapaComparativo___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;fnMapaComparativo___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;valorOriginal___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;valorPago___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;valorJuros___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;juros___&apos;) &gt;= 0) { /** Não faz nada */ }
					else if (fieldName.indexOf(&apos;parecerFinanceiro___&apos;) &gt;= 0) { /** Não faz nada */ }

					/** Adiciona os outros campos */
					else { fieldsAndValues.push({ &quot;name&quot;: fieldName, &quot;value&quot;: cardData.get(fieldName) }); }

				}

				if (processId == &quot;G4&quot;) valorOriginal = currencyPtBr2Float(cardData.get(&apos;valorLiquido&apos;));
				else if (processId == &quot;G5&quot;) valorOriginal = currencyPtBr2Float(cardData.get(&apos;Valor&apos;));

				/** Agora recriamos oa anexos com o campos de processo */
				if (attachmentList.size() &gt; 0) {
					for (var i = 0; i &lt; attachmentList.size(); i++) {
						var attachment = attachmentList.get(i);

						if (processId == &quot;G4&quot;) {
							valorOriginal = currencyPtBr2Float(cardData.get(&apos;valorLiquido&apos;));
							fieldsAndValues.push({ &quot;name&quot;: &apos;dataPagamento___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;data_pagamento&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;fdMapaComparativo___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });
							fieldsAndValues.push({ &quot;name&quot;: &apos;fnMapaComparativo___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valorOriginal___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;valor_original&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valorPago___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;valor_titulo&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valorJuros___&apos; + String(i + 1), &quot;value&quot;: String(currencyPtBr2Float(hAPI.getCardValue(&apos;valor_titulo&apos;)) - currencyPtBr2Float((hAPI.getCardValue(&apos;valor_original&apos;)))) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;juros___&apos; + String(i + 1), &quot;value&quot;: currencyPtBr2Float(hAPI.getCardValue(&apos;valor_titulo&apos;)) &gt; currencyPtBr2Float((hAPI.getCardValue(&apos;valor_original&apos;))) ? &apos;sim&apos; : &apos;nao&apos; });
							fieldsAndValues.push({ &quot;name&quot;: &apos;parecerFinanceiro___&apos; + String(i + 1), &quot;value&quot;: &quot;Atualizado via script do processo G7, solicitação &quot; + getValue(&quot;WKNumProces&quot;) });
						}

						else if (processId == &quot;G5&quot;) {
							fieldsAndValues.push({ &quot;name&quot;: &apos;data_vencimento_av___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;data_vencimento&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;data_pagamento_av___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;data_pagamento&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;anexo_av___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });
							fieldsAndValues.push({ &quot;name&quot;: &apos;fnInsertAnexoAv___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });

							fieldsAndValues.push({ &quot;name&quot;: &apos;pagamento_realizado_pu&apos;, &quot;value&quot;: &apos;Sim&apos; });
							fieldsAndValues.push({ &quot;name&quot;: &apos;teve_juros_pu&apos;, &quot;value&quot;: currencyPtBr2Float(hAPI.getCardValue(&apos;valor_titulo&apos;)) &gt; currencyPtBr2Float((hAPI.getCardValue(&apos;valor_original&apos;))) ? &apos;Sim&apos; : &apos;Não&apos; });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valor_original_pu&apos;, &quot;value&quot;: hAPI.getCardValue(&apos;valor_original&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valor_juros_pu&apos;, &quot;value&quot;: String(currencyPtBr2Float(hAPI.getCardValue(&apos;valor_titulo&apos;)) - currencyPtBr2Float((hAPI.getCardValue(&apos;valor_original&apos;)))) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;valor_pu&apos;, &quot;value&quot;: hAPI.getCardValue(&apos;valor_titulo&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;data_vencimento_pu___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;data_vencimento&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;data_pagamento_pu___&apos; + String(i + 1), &quot;value&quot;: hAPI.getCardValue(&apos;data_pagamento&apos;) });
							fieldsAndValues.push({ &quot;name&quot;: &apos;anexo_pu___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });
							fieldsAndValues.push({ &quot;name&quot;: &apos;fnInsertAnexoPu___&apos; + String(i + 1), &quot;value&quot;: attachment.getDocumentDescription() });
						}

						attachmentsListBody.push({
							&quot;documentId&quot;: attachment.getDocumentId(),
							&quot;version&quot;: attachment.getVersion(),
							&quot;attachments&quot;: null,
							&quot;companyId&quot;: 1,
							&quot;deleted&quot;: false,
							&quot;description&quot;: attachment.getDocumentDescription(),
							&quot;processInstanceId&quot;: solAnexarDoc,
							&quot;newAttach&quot;: true,
						})
					}
				}

				log.info(&quot;------ fieldsAndValues ------ &quot;);
				log.dir(fieldsAndValues)

				var fluigService = fluigAPI.getAuthorizeClientService();
				var data = {
					companyId: String(getValue(&quot;WKCompany&quot;)),
					serviceCode: &apos;api-fluig&apos;,
					endpoint: &quot;/ecm/api/rest/ecm/workflowView/send&quot;,
					method: &apos;POST&apos;,
					timeoutService: &quot;100&quot;,
					options: {
						encoding: &apos;UTF-8&apos;,
						mediaType: &apos;application/json&apos;,
						useSSL: true
					},
					headers: {
						ContentType: &apos;application/json;charset=UTF-8&apos;
					},
					params: {
						&quot;processInstanceId&quot;: solAnexarDoc,
						&quot;processId&quot;: processId,
						&quot;version&quot;: processDetail.getValue(0, &apos;version&apos;),
						&quot;taskUserId&quot;: getValue(&quot;WKUser&quot;),
						&quot;completeTask&quot;: false,
						&quot;currentMovto&quot;: movSeq.getValue(0, &apos;processHistoryPK.movementSequence&apos;),
						&quot;managerMode&quot;: true,
						&quot;selectedDestinyAfterAutomatic&quot;: -1,
						&quot;conditionAfterAutomatic&quot;: -1,
						&quot;selectedColleague&quot;: [
							getValue(&quot;WKUser&quot;)
						],
						&quot;comments&quot;: &quot;Atualizado via script do processo G7, solicitação &quot; + getValue(&quot;WKNumProces&quot;),
						&quot;newObservations&quot;: [],
						&quot;appointments&quot;: [],
						&quot;attachments&quot;: attachmentsListBody,
						&quot;pass&quot;: null,
						&quot;digitalSignature&quot;: false,
						&quot;formData&quot;: fieldsAndValues,
						&quot;isDigitalSigned&quot;: false,
						&quot;isLinkReturn&quot;: null,
						&quot;versionDoc&quot;: docDetails.getValue(0, &apos;documentPK.version&apos;),
						&quot;selectedState&quot;: movSeq.getValue(0, &apos;stateSequence&apos;),
						&quot;internalFields&quot;: [
							&quot;tipoDemanda&quot;,
							&quot;dataEntrega&quot;,
							&quot;responsavelPeloRecebimento&quot;,
							&quot;material&quot;,
							&quot;material&quot;,
							&quot;tipoRecebimento&quot;,
							&quot;notacoesMaterialParcial&quot;
						],
						&quot;subProcessId&quot;: null,
						&quot;subProcessSequence&quot;: null,
						&quot;currentState&quot;: movSeq.getValue(0, &apos;stateSequence&apos;)
					}

				}

				var obj = fluigService.invoke(JSONUtil.toJSON(data));

				log.dir(obj);
				return String(obj.result)
			}
		} else {
			log.info(&quot;Não há documento para atualizar! &quot;);
		}
	}
	catch (error) {
		throw String(error.lineNumber + &quot; - &quot; + error.message);
	}
}

function currencyPtBr2Float(val) {
	if (String(val).length &gt; 1) {
		val = val.replaceAll(&quot;[^\\d,.-]&quot;, &quot;&quot;);
		var localeBR = new java.util.Locale(&quot;pt&quot;, &quot;BR&quot;);
		var formatador = new java.text.NumberFormat.getNumberInstance(localeBR);
		var numero = formatador.parse(val);
		var valorDecimal = new java.math.BigDecimal(numero.toString());
		return valorDecimal;
	}
	return 0.00;
}

function getSourceProcess(processInstanceId) {
	var datasetWorkflowProcess = DatasetFactory.getDataset(&apos;workflowProcess&apos;,
		new Array(&apos;processId&apos;, &apos;workflowProcessPK.processInstanceId&apos;, &apos;status&apos;, &apos;version&apos;, &apos;cardDocumentId&apos;),
		new Array(
			DatasetFactory.createConstraint(&apos;workflowProcessPK.processInstanceId&apos;, processInstanceId, processInstanceId, ConstraintType.MUST)
		), null);
	if (datasetWorkflowProcess.rowsCount &gt; 0) return datasetWorkflowProcess;
	log.info(&quot;Não foi possível obter os dados na função getSourceProcess(&quot; + processInstanceId + &quot;)&quot;)
	return false
}

function getG3(identificadorFluig) {
	var datasetDSG3 = DatasetFactory.getDataset(&apos;DSG3&apos;,
		new Array(&apos;IdentificadorFluig&apos;, &apos;StatusFluig&apos;, &apos;IdentificadorFluigAnexo&apos;),
		new Array(
			DatasetFactory.createConstraint(&apos;IdentificadorFluig&apos;, identificadorFluig, identificadorFluig, ConstraintType.MUST)
		), null);
	if (datasetDSG3.rowsCount &gt; 0) return datasetDSG3;
	log.info(&quot;Não foi possível obter os dados na função getG3(&quot; + identificadorFluig + &quot;)&quot;)
	return false
}

function getG4(identificadorFluig) {
	var datasetDSG4 = DatasetFactory.getDataset(&apos;DSG3&apos;,
		new Array(&apos;IdentificadorFluig&apos;, &apos;StatusFluig&apos;),
		new Array(
			DatasetFactory.createConstraint(&apos;IdentificadorFluig&apos;, identificadorFluig, identificadorFluig, ConstraintType.MUST)
		), null);
	if (datasetDSG4.rowsCount &gt; 0) return datasetDSG4;
	log.info(&quot;Não foi possível obter os dados na função getG4(&quot; + identificadorFluig + &quot;)&quot;)
	return false
}

function getG5(identificadorFluig) {
	var datasetDSG5 = DatasetFactory.getDataset(&apos;DSG3&apos;,
		new Array(&apos;numero_solicitacao&apos;),
		new Array(
			DatasetFactory.createConstraint(&apos;numero_solicitacao&apos;, identificadorFluig, identificadorFluig, ConstraintType.MUST)
		), null);
	if (datasetDSG5.rowsCount &gt; 0) return datasetDSG5;

	log.info(&quot;Não foi possível obter os dados na função getG5(&quot; + identificadorFluig + &quot;)&quot;)
	return false
}

function getDocDetails(documentId) {
	var datasetDocument = DatasetFactory.getDataset(&apos;document&apos;,
		new Array(&apos;documentPK.version&apos;, &apos;documentPK.documentId&apos;),
		new Array(
			DatasetFactory.createConstraint(&apos;documentPK.documentId&apos;, documentId, documentId, ConstraintType.MUST),
			DatasetFactory.createConstraint(&apos;activeVersion&apos;, &apos;true&apos;, &apos;true&apos;, ConstraintType.MUST)
		), null);
	if (datasetDocument.rowsCount &gt; 0) return datasetDocument;
	log.info(&quot;Não foi possível obter os dados na função getDocDetails(&quot; + documentId + &quot;) &quot;)
	return false;
}

function getMovementSeq(processInstanceId) {
	var datasetProcessHistory = DatasetFactory.getDataset(&apos;processHistory&apos;, null,
		new Array(
			DatasetFactory.createConstraint(&apos;sqlLimit&apos;, &apos;1&apos;, &apos;1&apos;, ConstraintType.MUST),
			DatasetFactory.createConstraint(&apos;processHistoryPK.processInstanceId&apos;, processInstanceId, processInstanceId, ConstraintType.MUST)
		),
		new Array(&apos;processHistoryPK.movementSequence;desc&apos;)
	);
	log.dir(datasetProcessHistory)
	if (datasetProcessHistory.rowsCount &gt; 0) return datasetProcessHistory;
	log.info(&quot;Não foi possível obter os dados na função getMovementSeq(&quot; + processInstanceId + &quot;)&quot;)
	return false;
}

function setFormProcess(params) {
	return {
		&quot;processInstanceId&quot;: params.processInstanceId,
		&quot;processId&quot;: params.processId,
		&quot;version&quot;: params.version,
		&quot;taskUserId&quot;: params.taskUserId,
		&quot;completeTask&quot;: false,
		&quot;currentMovto&quot;: params.currentMovto,
		&quot;managerMode&quot;: true,
		&quot;selectedDestinyAfterAutomatic&quot;: -1,
		&quot;conditionAfterAutomatic&quot;: -1,
		&quot;selectedColleague&quot;: [
			params.taskUserId
		],
		&quot;comments&quot;: &quot;&quot;,
		&quot;newObservations&quot;: [],
		&quot;appointments&quot;: [],
		&quot;attachments&quot;: [],
		&quot;pass&quot;: null,
		&quot;digitalSignature&quot;: false,
		&quot;formData&quot;: [
			{
				&quot;name&quot;: &quot;tipoDemanda&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;dataEntrega&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;responsavelPeloRecebimento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;material&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;material&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;tipoRecebimento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;notacoesMaterialParcial&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;pagamentosParciaisObs&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;encerraLoopNotifi&quot;,
				&quot;value&quot;: &quot;false&quot;
			},
			{
				&quot;name&quot;: &quot;processHistory&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valueRadioParcial&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;TipoAprovacao&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;NSeqItmMov&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;IdentificadorFluig&quot;,
				&quot;value&quot;: &quot;48278&quot;
			},
			{
				&quot;name&quot;: &quot;StatusFluig&quot;,
				&quot;value&quot;: &quot;Aberta&quot;
			},
			{
				&quot;name&quot;: &quot;CC&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;CentroDeCustoMecanismo&quot;,
				&quot;value&quot;: &quot;02.01.01.01.004&quot;
			},
			{
				&quot;name&quot;: &quot;CC_mobile&quot;,
				&quot;value&quot;: &quot;SEECT PB ITEM 2&quot;
			},
			{
				&quot;name&quot;: &quot;produtosMobile&quot;,
				&quot;value&quot;: &quot;TIJOLO CERAMICO 09X14X29 |&quot;
			},
			{
				&quot;name&quot;: &quot;tipoEntrega&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;dataVencimentoArr&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valueTipoDemandaCompras&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;produtoCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;unidadeCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;quantidadeCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;precoUnitarioCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;descontoCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;totalCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;centroCustoCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valorCampoOculto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;nomeComprador&quot;,
				&quot;value&quot;: &quot;Evaldo 1&quot;
			},
			{
				&quot;name&quot;: &quot;urgencia&quot;,
				&quot;value&quot;: &quot;Não informado&quot;
			},
			{
				&quot;name&quot;: &quot;pedidoExtra&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;CodColigada&quot;,
				&quot;value&quot;: &quot;2&quot;
			},
			{
				&quot;name&quot;: &quot;tipoMovimento&quot;,
				&quot;value&quot;: &quot;1.1.26&quot;
			},
			{
				&quot;name&quot;: &quot;IdMov&quot;,
				&quot;value&quot;: &quot;69958&quot;
			},
			{
				&quot;name&quot;: &quot;numeroMov&quot;,
				&quot;value&quot;: &quot;010569&quot;
			},
			{
				&quot;name&quot;: &quot;dataEmissao&quot;,
				&quot;value&quot;: &quot;2025-04-10&quot;
			},
			{
				&quot;name&quot;: &quot;filial&quot;,
				&quot;value&quot;: &quot;1 - ENGENHARIA DE AVALIACOES, PERICIAS E CONST. LTDA&quot;
			},
			{
				&quot;name&quot;: &quot;fornecedor&quot;,
				&quot;value&quot;: &quot;ENGPAC&quot;
			},
			{
				&quot;name&quot;: &quot;desconto&quot;,
				&quot;value&quot;: &quot;R$ 0,00&quot;
			},
			{
				&quot;name&quot;: &quot;valueFrete&quot;,
				&quot;value&quot;: &quot;R$ 0,00&quot;
			},
			{
				&quot;name&quot;: &quot;valorLiquido&quot;,
				&quot;value&quot;: &quot;R$ 100,00&quot;
			},
			{
				&quot;name&quot;: &quot;dadosBancarios&quot;,
				&quot;value&quot;: &quot;Banco:  | Ag/C:  | PIX: (TIPO):&quot;
			},
			{
				&quot;name&quot;: &quot;codPagamento&quot;,
				&quot;value&quot;: &quot;A VISTA SEM PRAZO&quot;
			},
			{
				&quot;name&quot;: &quot;localEstoque&quot;,
				&quot;value&quot;: &quot;01.003 - ALMOXARIFADO CENTRAL MOSSORO&quot;
			},
			{
				&quot;name&quot;: &quot;centroCusto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valor&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;centroCusto___1&quot;,
				&quot;value&quot;: &quot;02.01.01.01.004 - SEECT PB ITEM 2&quot;
			},
			{
				&quot;name&quot;: &quot;valor___1&quot;,
				&quot;value&quot;: &quot;R$ 100,00&quot;
			},
			{
				&quot;name&quot;: &quot;sequencia&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;produto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;unidade&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;quantidade&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;precoUnidade&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;descontoItem&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;totalProduto&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;sequencia___1&quot;,
				&quot;value&quot;: &quot;1&quot;
			},
			{
				&quot;name&quot;: &quot;produto___1&quot;,
				&quot;value&quot;: &quot;TIJOLO CERAMICO 09X14X29&quot;
			},
			{
				&quot;name&quot;: &quot;unidade___1&quot;,
				&quot;value&quot;: &quot;UN&quot;
			},
			{
				&quot;name&quot;: &quot;quantidade___1&quot;,
				&quot;value&quot;: &quot;10&quot;
			},
			{
				&quot;name&quot;: &quot;precoUnidade___1&quot;,
				&quot;value&quot;: &quot;R$ 10,00&quot;
			},
			{
				&quot;name&quot;: &quot;descontoItem___1&quot;,
				&quot;value&quot;: &quot;R$ 0,00&quot;
			},
			{
				&quot;name&quot;: &quot;totalProduto___1&quot;,
				&quot;value&quot;: &quot;R$ 100,00&quot;
			},
			{
				&quot;name&quot;: &quot;historico&quot;,
				&quot;value&quot;: &quot;ok&quot;
			},
			{
				&quot;name&quot;: &quot;observacao&quot;,
				&quot;value&quot;: &quot;-&quot;
			},
			{
				&quot;name&quot;: &quot;fdMapaTipoDemanda&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fnMapaTipoDemanda&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;parecerCredito&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;_dataEntrega&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;dataVencimento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fdParecerTecnico&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fnParecerTecnico&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;dataPagamento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fdMapaComparativo&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fnMapaComparativo&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;juros&quot;,
				&quot;value&quot;: &quot;-&quot;
			},
			{
				&quot;name&quot;: &quot;valorOriginal&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valorPago&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valorJuros&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;parecerFinanceiro&quot;,
				&quot;value&quot;: &quot;&quot;
			},

			{
				&quot;name&quot;: &quot;dataPagamento___1&quot;,
				&quot;value&quot;: &quot;nao&quot;
			},
			{
				&quot;name&quot;: &quot;fdMapaComparativo___1&quot;,
				&quot;value&quot;: &quot;comprovante_pagamento61373.pdf&quot;
			},
			{
				&quot;name&quot;: &quot;fnMapaComparativo___1&quot;,
				&quot;value&quot;: &quot;comprovante_pagamento61373.pdf&quot;
			},
			{
				&quot;name&quot;: &quot;juros___1&quot;,
				&quot;value&quot;: &quot;nao&quot;
			},
			{
				&quot;name&quot;: &quot;valorOriginal___1&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valorPago___1&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;valorJuros___1&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;parecerFinanceiro___1&quot;,
				&quot;value&quot;: &quot;nao veremos novamente algo&quot;
			},

			{
				&quot;name&quot;: &quot;statusAprovacao&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;aprovacaoComprovantes&quot;,
				&quot;value&quot;: &quot;-&quot;
			},
			{
				&quot;name&quot;: &quot;_responsavelPeloRecebimento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;tipoRecebimentoValue&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;_notacoesMaterialParcial&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;dataRecebimento&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fdPropostaDeFornecedores&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fnPropostaDeFornecedores&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fdRelatorioFotografico&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;fnRelatorioFotografico&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;_pagamentosParciaisObs&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;obs_Estorno&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;obs_Credito&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;cTask039&quot;,
				&quot;value&quot;: &quot;Pool:Group:ENGPAC_1&quot;
			},
			{
				&quot;name&quot;: &quot;cTask039Group&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;cTask039UsersGroup&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;nTask039&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;txt_posicaoNotificacao&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;usuarioNotificacao&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;_material&quot;,
				&quot;value&quot;: &quot;&quot;
			},
			{
				&quot;name&quot;: &quot;zTask039&quot;,
				&quot;value&quot;: &quot;&quot;
			}
		],
		&quot;isDigitalSigned&quot;: false,
		&quot;isLinkReturn&quot;: null,
		&quot;versionDoc&quot;: params.versionDoc,
		&quot;selectedState&quot;: params.selectedState,
		&quot;internalFields&quot;: [
			&quot;tipoDemanda&quot;,
			&quot;dataEntrega&quot;,
			&quot;responsavelPeloRecebimento&quot;,
			&quot;material&quot;,
			&quot;material&quot;,
			&quot;tipoRecebimento&quot;,
			&quot;notacoesMaterialParcial&quot;
		],
		&quot;subProcessId&quot;: null,
		&quot;subProcessSequence&quot;: null,
		&quot;currentState&quot;: params.currentState,
	}
}

function setFormData(params) {
	var newArray = []

	for (var index = 0; index &lt; params.length; index++) {
		newArray.push({
			&quot;name&quot;: params[index].name,
			&quot;value&quot;: params[index].value
		})
	}

	return newArray;
}

/***
 * 65538
 */
</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask30</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask30(attempt, message) {
	hAPI.setCardValue(&quot;cTask015&quot;, getValue(&quot;WKUser&quot;));
	hAPI.setCardValue(&quot;cTask016&quot;, getAtribuicoes(&quot;G7-016&quot;));
	hAPI.setCardValue(&quot;cTask021&quot;, getAtribuicoes(&quot;G7-021&quot;));
	hAPI.setCardValue(&quot;cTask029&quot;, getAtribuicoes(&quot;G7-029&quot;));

	hAPI.setCardValue(&quot;nTask015&quot;, get_Constante(&quot;G7-015-SLA&quot;));
	hAPI.setCardValue(&quot;nTask021&quot;, get_Constante(&quot;G7-021-SLA&quot;));
	hAPI.setCardValue(&quot;nTask029&quot;, get_Constante(&quot;G7-029-SLA&quot;));

	try {
		var Service = ServiceManager.getService(&apos;ECMWorkflowEngineService&apos;);
		var serviceHelper = Service.getBean();
		//var serviceLocator = serviceHelper.instantiate(&apos;classe.locator&apos;);
	} catch (error) {
		log.error(error);
		throw error;
	}
}

function getAtribuicoes(atribuicao) {
	var constraintAtribuicao = DatasetFactory.createConstraint(
		&quot;ID_ATV&quot;,
		atribuicao,
		atribuicao,
		ConstraintType.MUST
	);
	var dtsAtribuicoes = DatasetFactory.getDataset(
		&quot;dts_consultaCadastroAtribuicoes&quot;,
		null,
		[constraintAtribuicao],
		null
	);
	if (dtsAtribuicoes.rowsCount &gt; 0) {
		return dtsAtribuicoes.getValue(0, &quot;hd_cod_user_atv&quot;);
	} else {
		return &quot;&quot;;
	}
}

///**** GET PARA CONTANTES
///**** PARAMETROS cCriterio
function get_Constante(cCriterio) {
	/// Get Dataset para uma variavel;
	var aConstraint = [];
	aConstraint.push(DatasetFactory.createConstraint(&apos;id&apos;, cCriterio, cCriterio, ConstraintType.MUST));
	/// aciona o dataset ds_Constante
	var oConstantes = DatasetFactory.getDataset(&apos;ds_Constantes&apos;, null, null, null);

	for (var i = 0; i &lt; oConstantes.values.length; i++) {
		if (oConstantes.values[i][0].trim() == cCriterio.trim()) {
			return oConstantes.values[i][1];
		}
	}
	return &apos;0&apos;;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>servicetask41</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function servicetask41(attempt, message) {
	try {
		if (hAPI.getCardValue(&apos;solicitacao_origem&apos;) == 0) {
			hAPI.setCardValue(&apos;solicitacao_origem&apos;, &quot;&quot;);
		}

		var cancSolDuplicada = cancelaSolAberta();
		var gerPDF = geraPdf();

		var G3 = getG3(hAPI.getCardValue(&apos;id_movimento&apos;))
		if (G3 &amp;&amp; G3.rowsCount &gt; 0) {
			hAPI.setCardValue(&apos;solicitacao_origem&apos;, G3.getValue(0, &apos;IdentificadorFluig&apos;));
			hAPI.setCardValue(&apos;processo_origem&apos;, &apos;G3&apos;);
			return true;
		}

		var G5 = getG5(hAPI.getCardValue(&apos;id_titulo&apos;))
		if (G5 &amp;&amp; G5.rowsCount &gt; 0) {
			hAPI.setCardValue(&apos;solicitacao_origem&apos;, G5.getValue(0, &apos;numero_solicitacao&apos;));
			hAPI.setCardValue(&apos;processo_origem&apos;, &apos;G5&apos;);
			return true;
		}

	}
	catch (error) {
		throw error;
	}
}

function getConstante(param) {
	var aConstraint = [];
	aConstraint.push(DatasetFactory.createConstraint(&apos;id&apos;, param, param, ConstraintType.MUST));
	var oConstantes = DatasetFactory.getDataset(&apos;ds_Constantes&apos;, null, null, null);
	for (var i = 0; i &lt; oConstantes.rowsCount; i++) {
		if (oConstantes.getValue(i, &quot;id&quot;).trim() == param.trim()) {
			return oConstantes.getValue(i, &quot;Valor&quot;).trim();
		}
	}
	return &apos;0&apos;;
}

function geraPdf() {
	try {
		// Gerar e anexar PDF
		// Coletar hora atual
		var data = new Date();
		var horas = (&quot;0&quot; + data.getHours()).slice(-2);
		var minutos = (&quot;0&quot; + data.getMinutes()).slice(-2);
		var horaFormatada = horas + &quot;:&quot; + minutos;

		var valor_titulo = parseFloat((hAPI.getCardValue(&quot;valor_titulo&quot;).replace(&apos;,&apos;, &apos;.&apos;)));
		var valor_original = parseFloat((hAPI.getCardValue(&quot;valor_original&quot;).replace(&apos;,&apos;, &apos;.&apos;)));
		var acre_desc = (valor_titulo - valor_original);

		var codigo_autenticacao = &quot;&quot;;

		if (hAPI.getCardValue(&quot;codigo_autenticacao&quot;) != &quot;&quot;) {
			codigo_autenticacao =
				&quot;&lt;tr&gt;&quot; +
				&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Autenticação:&lt;/b&gt; &quot; + hAPI.getCardValue(&quot;codigo_autenticacao&quot;) + &quot;&lt;/td&gt;&quot; +
				&quot;&lt;/tr&gt;&quot;;
		}

		var conteudoHTML =
			&quot;&lt;!DOCTYPE html&gt;&quot; +
			&quot;&lt;html lang=&apos;pt-br&apos;&gt;&quot; +
			&quot;&lt;head&gt;&quot; +
			&quot;    &lt;meta charset=&apos;UTF-8&apos;/&gt;&quot; +
			&quot;    &lt;title&gt;Comprovante&lt;/title&gt;&quot; +
			&quot;    &lt;style&gt;&quot; +
			&quot;        h2 { text-align: center; font-weight: bold; }&quot; +
			&quot;        .linha { margin-bottom: 10px; margin-left: 50px; font-size: 18px; }&quot; +
			&quot;        .titulo { font-weight: bold; margin-top: 20px; margin-bottom: 20px; font-size: 18px; }&quot; +
			&quot;    &lt;/style&gt;&quot; +
			&quot;&lt;/head&gt;&quot; +
			&quot;&lt;body&gt;&quot; +
			&quot;    &lt;div align=&apos;center&apos; width=&apos;690&apos;&gt;&quot; +
			&quot;        &lt;h2&gt;COMPROVANTE&lt;/h2&gt;&quot; +
			&quot;        &lt;p class=&apos;titulo&apos;&gt;Dados do pagador&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Nome do pagador: &lt;b&gt; &quot; + hAPI.getCardValue(&quot;id_fornecedor&quot;) + &quot; &lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;CPF/CNPJ do pagador: &lt;b&gt;123.456.789-10&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Agência/Conta: &lt;b&gt;12356-7&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;titulo&apos;&gt;Dados do recebedor&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Nome do recebedor: &lt;b&gt;Teste&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Chave: &lt;b&gt;123.456.789-10&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;CPF/CNPJ do recebedor: &lt;b&gt;123.456.789-10&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Instituição: &lt;b&gt;Itau&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;titulo&apos;&gt;Dados da transação&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Valor: &lt;b&gt;&quot; + valor_titulo.toFixed(2).replace(&apos;.&apos;, &apos;,&apos;).replace(/\B(?=(\d{3})+(?!\d))/g, &apos;.&apos;) + &quot;&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Data da transferência: &lt;b&gt;&quot; + hAPI.getCardValue(&quot;data_pagamento&quot;).substring(0, 10) + &quot;&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;        &lt;p class=&apos;linha&apos;&gt;Tipo de pagamento: &lt;b&gt;&quot; + hAPI.getCardValue(&quot;forma_de_pagamento&quot;) + &quot;&lt;/b&gt;&lt;/p&gt;&quot; +
			&quot;    &lt;/div&gt;&quot; +
			&quot;&lt;/body&gt;&quot; +
			&quot;&lt;/html&gt;&quot;;

		// var conteudoHTML =
		// 	&quot;&lt;!DOCTYPE html&gt;&quot; +
		// 	&quot;&lt;html lang=&apos;pt-br&apos;&gt;&quot; +
		// 	&quot;&lt;head&gt;&quot; +
		// 	&quot;&lt;meta charset=&apos;UTF-8&apos;/&gt;&quot; +
		// 	&quot;&lt;title&gt;Comprovante de Pagamento&lt;/title&gt;&quot; +
		// 	&quot;&lt;/head&gt;&quot; +
		// 	&quot;&lt;body&gt;&quot; +
		// 	&quot;&lt;table border=&apos;1&apos; cellpadding=&apos;10&apos; align=&apos;center&apos; width=&apos;600&apos;&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&quot; +
		// 	&quot;&lt;table&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td&gt;&lt;img src=&apos;https://gennesisengenharia160517.fluig.cloudtotvs.com.br:1650/portal/api/servlet/image/1/custom/logo_image.png&apos; alt=&apos;Logo ENGPAC/Gênnessis Engenharia&apos; width=&apos;90&apos; /&gt;&lt;/td&gt;&quot; +
		// 	&quot;&lt;td&gt;&lt;b style=&apos; font-size: 20px&apos;&gt;Comprovante de Pagamento&lt;/b&gt;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;/table&gt;&quot; +
		// 	&quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Data:&lt;/b&gt; &quot; + hAPI.getCardValue(&quot;data_pagamento&quot;).substring(0, 10) + &quot; &lt;b&gt;Hora:&lt;/b&gt; &quot; + horaFormatada + &quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Fornecedor:&lt;/b&gt; &quot; + hAPI.getCardValue(&quot;id_fornecedor&quot;) + &quot; &lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Vencimento:&lt;/b&gt; &quot; + hAPI.getCardValue(&quot;data_vencimento&quot;).substring(0, 10) + &quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Pago:&lt;/b&gt; &quot; + valor_titulo.toFixed(2).replace(&apos;.&apos;, &apos;,&apos;).replace(/\B(?=(\d{3})+(?!\d))/g, &apos;.&apos;) + &quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Valor:&lt;/b&gt; &quot; + valor_original.toFixed(2).replace(&apos;.&apos;, &apos;,&apos;).replace(/\B(?=(\d{3})+(?!\d))/g, &apos;.&apos;) + &quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td style=&apos;border-color: white;&apos;&gt;&lt;b&gt;Acréscimos/Descontos:&lt;/b&gt; &quot; + acre_desc.toFixed(2).replace(&apos;.&apos;, &apos;,&apos;).replace(/\B(?=(\d{3})+(?!\d))/g, &apos;.&apos;) + &quot;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	codigo_autenticacao +
		// 	&quot;&lt;tr&gt;&quot; +
		// 	&quot;&lt;td align=&apos;center&apos; style=&apos;border-color: white;&apos;&gt;&lt;b style=&apos;font-size: 20px;&apos;&gt;Banco Itau SA&lt;/b&gt;&lt;/td&gt;&quot; +
		// 	&quot;&lt;/tr&gt;&quot; +
		// 	&quot;&lt;/table&gt;&quot; +
		// 	&quot;&lt;/body&gt;&quot; +
		// 	&quot;&lt;/html&gt;&quot;;

		// Nome do arquivo que será salvo no servidor
		var nomeArquivo = &quot;comprovante_pagamento&quot; + hAPI.getCardValue(&quot;id_titulo&quot;) + &quot;.pdf&quot;;

		// Importando as classes do iText
		var Document = Packages.com.itextpdf.text.Document;
		var PdfWriter = Packages.com.itextpdf.text.pdf.PdfWriter;
		var StringReader = Packages.java.io.StringReader;
		var XMLWorkerHelper = Packages.com.itextpdf.tool.xml.XMLWorkerHelper;

		// Criar documento PDF
		var document = new Document();
		var fileOutputStream = new java.io.FileOutputStream(nomeArquivo);
		var pdfWriter = PdfWriter.getInstance(document, fileOutputStream);

		// Abrindo o documento antes de adicionar o conteúdo
		document.open();

		// Convertendo HTML para PDF
		XMLWorkerHelper.getInstance().parseXHtml(
			pdfWriter,
			document,
			new StringReader(conteudoHTML)
		);

		document.close();
		fileOutputStream.close();


		// Transformar arquivo em bytes
		var file = new java.io.File(nomeArquivo);
		var is = new java.io.FileInputStream(file);
		var bytesBuffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 8192);
		var baos = new java.io.ByteArrayOutputStream();
		var len = 0;

		while ((len = is.read(bytesBuffer, 0, bytesBuffer.length)) != -1) {
			baos.write(bytesBuffer, 0, len);
		}

		var fileContents = baos.toByteArray();
		baos.close();

		log.info(&quot;PDF criado com sucesso em: &quot; + nomeArquivo);

		// Salvar arquivo no GED
		var FOLDER_FORM_PDF = 64569; // ID da pasta onde salvará o PDF
		var serviceHelper = ServiceManager.getService(&quot;ECMDocumentService&quot;).getBean();
		var service = serviceHelper
			.instantiate(&quot;com.totvs.technology.ecm.dm.ws.ECMDocumentServiceService&quot;)
			.getDocumentServicePort();

		if (service == null) {
			log.error(&quot;Erro ao carregar ECMDocumentService&quot;);
			throw &quot;Erro ao gerar PDF do formulário&quot;;
		}

		var attachment = serviceHelper.instantiate(&quot;com.totvs.technology.ecm.dm.ws.Attachment&quot;);
		attachment.setFileName(nomeArquivo);
		attachment.setFileSize(1);
		attachment.setAttach(true);
		attachment.setEditing(false);
		attachment.setPrincipal(true);
		attachment.setFilecontent(fileContents);

		var attachmentArray = serviceHelper.instantiate(&quot;com.totvs.technology.ecm.dm.ws.AttachmentArray&quot;);
		attachmentArray.getItem().add(attachment);

		var result = service.createSimpleDocument(
			&quot;suporte.fluig&quot;, // Login do usuário
			&quot;Fluig@2022*&quot;, // Senha do usuário
			1,
			FOLDER_FORM_PDF,
			&quot;admin&quot;,
			nomeArquivo,
			attachmentArray
		);

		// Anexar arquivo
		hAPI.attachDocument(result.getItem().get(0).getDocumentId());
		return result.getItem().get(0).getDocumentId();
	} catch (err) {
		log.error(err);
		throw &quot;Erro ao gerar PDF do formulário: &quot; + err;
	}
}

function cancelaSolAberta() {
	try {

		/** Cancela solicitações abertas anteriormente */
		function cancelaSol(cardDocumentId) {
			log.info(&apos;Documento  &apos; + cardDocumentId)
			var colunasWorkflowProcess = new Array(&apos;workflowProcessPK.processInstanceId&apos;);
			var datasetWorkflowProcess = DatasetFactory.getDataset(&apos;workflowProcess&apos;, colunasWorkflowProcess, new Array(
				DatasetFactory.createConstraint(&apos;cardDocumentId&apos;, cardDocumentId, cardDocumentId, ConstraintType.MUST),
				DatasetFactory.createConstraint(&apos;status&apos;, 0, 0, ConstraintType.MUST)
			), null);

			if (datasetWorkflowProcess.rowsCount &gt; 0) {
				log.info(&apos;Vamos cancelar a solicitação &apos; + datasetWorkflowProcess.getValue(0, &apos;workflowProcessPK.processInstanceId&apos;))
				return DatasetFactory.getDataset(&apos;dsCancelaSolicitacoes&apos;, null, new Array(
					DatasetFactory.createConstraint(&apos;processInstanceId&apos;, datasetWorkflowProcess.getValue(0, &apos;workflowProcessPK.processInstanceId&apos;), datasetWorkflowProcess.getValue(0, &apos;workflowProcessPK.processInstanceId&apos;), ConstraintType.MUST)
				), null);
			}
			log.info(&apos;Documento  &apos; + cardDocumentId + &quot; não tinha uma solicitação vinculada para cancelar!&quot;)
			return false;

		}

		var id_titulo = hAPI.getCardValue(&apos;id_titulo&apos;);
		var processInstanceId = getValue(&apos;WKNumProces&apos;)

		var constraintDs_G71 = DatasetFactory.createConstraint(&apos;id_titulo&apos;, id_titulo, id_titulo, ConstraintType.MUST);
		var constraintDs_G72 = DatasetFactory.createConstraint(&apos;processInstanceId&apos;, processInstanceId, processInstanceId, ConstraintType.MUST_NOT);
		var datasetDs_G7 = DatasetFactory.getDataset(&apos;ds_G7&apos;, null, new Array(constraintDs_G71, constraintDs_G72), null);

		for (var indexG7 = 0; indexG7 &lt; datasetDs_G7.rowsCount; indexG7++) {
			log.info(datasetDs_G7.getValue(indexG7, &apos;documentid&apos;))
			var cancelou = cancelaSol(datasetDs_G7.getValue(indexG7, &apos;documentid&apos;))
			log.dir(cancelou);
		}

		return true;
	}
	catch (e) {
		if (e == null) e = &quot;Erro desconhecido!&quot;;
		var mensagemErro = &quot;Ocorreu um erro ao salvar dados no RM: &quot; + String(e) + &quot;. Linha: &quot; + String(e.lineNumber);
		throw mensagemErro;
	}
}

function atualizaLan() {
	/** Atualiza o registro no RM */
	var user = getConstante(&apos;rm_usuario&apos;)
	var pass = getConstante(&apos;rm_senha&apos;)
	var idLan = hAPI.getCardValue(&apos;id_titulo&apos;);
	var codColigada = hAPI.getCardValue(&apos;cod_coligada&apos;);
	var context = String(&quot;CODSISTEMA=G;CODCOLIGADA=&quot; + codColigada + &quot;;CODUSUARIO=&quot; + user);
	var primaryKey = String(codColigada + &quot;;&quot; + idLan);
	var authService = getWebService(user, pass, &apos;RMWsDataServer&apos;, &apos;com.totvs.WsDataServer&apos;, &apos;com.totvs.IwsDataServer&apos;);

	var text = new String(authService.readRecord(&quot;FinLanDataBR&quot;, primaryKey, context));

	log.info(text);

	if (String(text).indexOf(&quot;FLAN&quot;) &gt; 0) {
		text = formatStringToXML(text);

		var solicitacao_origem = getNodeValue(text, &quot;IDFLUIG&quot;);

		hAPI.setCardValue(&quot;solicitacao_origem&quot;, solicitacao_origem);
		hAPI.setCardValue(&quot;id_fornecedor&quot;, getNodeValue(text, &quot;CODCFO&quot;));
		hAPI.setCardValue(&quot;data_vencimento&quot;, getNodeValue(text, &quot;DATAVENCIMENTO&quot;));
		hAPI.setCardValue(&quot;data_pagamento&quot;, new Date());
		hAPI.setCardValue(&quot;valor_titulo&quot;, getNodeValue(text, &quot;VALOR&quot;));
		hAPI.setCardValue(&quot;codigo_autenticacao&quot;, getNodeValue(text, &quot;CODCFO&quot;));
		hAPI.setCardValue(&quot;valor_original&quot;, getNodeValue(text, &quot;VALORORIGINAL&quot;));

		// Precisa mesmo salvar???

		// text = removeNode(text, &quot;FLAN&quot;);
		// text = removeNode(text, &quot;FLANRATCCU&quot;);
		// text = removeNode(text, &quot;FLANCOMPL&quot;);
		// text = removeNode(text, &quot;_x0024_IMAGES&quot;);

		// var FLAN = &quot;&lt;FLAN&gt;&quot;;
		// FLAN += &quot;	&lt;CODCOLIGADA&gt;&quot; + codColigada + &quot;&lt;/CODCOLIGADA&gt;&quot;;
		// FLAN += &quot;	&lt;IDLAN&gt;&quot; + idLan + &quot;&lt;/IDLAN&gt;&quot;;
		// FLAN += &quot;&lt;/FLAN&gt;&quot;;
		// FLAN += &quot;&lt;FLANCOMPL&gt;&quot;;
		// FLAN += &quot;	&lt;CODCOLIGADA&gt;&quot; + codColigada + &quot;&lt;/CODCOLIGADA&gt;&quot;;
		// FLAN += &quot;	&lt;IDLAN&gt;&quot; + idLan + &quot;&lt;/IDLAN&gt;&quot;;
		// FLAN += &quot;	&lt;IDFLUIG&gt;&quot; + getValue(&apos;WKNumProces&apos;) + &quot;&lt;/IDFLUIG&gt;&quot;;
		// FLAN += &quot;&lt;/FLANCOMPL&gt;&quot;;

		// text = addItem(text, &quot;&lt;/FinLAN&gt;&quot;, FLAN);

		// text = new XML(text);
		// log.info(&quot;XML atualizado: &quot; + text);

		// // // Está gerando 2 processos G7
		// var result = new String(authService.saveRecord(&quot;FinLanDataBR&quot;, text, context));
		// log.info(&quot;Result: &quot; + result);
		// checkIsPK(result, 2);

		// log.info(&quot;Lançamento atualizado no RM&quot;);
	} else {
		throw &quot;Não foi possível obter os dados do movimento: &quot; + idLan + &quot;!&quot;;
	}
}


function getG3(IdMov) {
	if (parseInt(IdMov) &gt; 0) {
		var datasetDSG3 = DatasetFactory.getDataset(&apos;DSG3&apos;,
			new Array(&apos;IdMov&apos;, &apos;IdentificadorFluig&apos;, &apos;IdentificadorFluigAnexo&apos;, &apos;nomeComprador&apos;),
			new Array(
				DatasetFactory.createConstraint(&apos;sqlLimit&apos;, &apos;1&apos;, &apos;1&apos;, ConstraintType.MUST),
				DatasetFactory.createConstraint(&apos;IdMov&apos;, IdMov, IdMov, ConstraintType.MUST)
			),
			new Array(&apos;IdentificadorFluig;desc&apos;)
		);
		if (datasetDSG3 &amp;&amp; datasetDSG3.rowsCount &gt; 0) return datasetDSG3;
	}
	return false;
}


function getG5(idLan) {
	if (parseInt(idLan) &gt; 0) {
		var datasetDs_G5 = DatasetFactory.getDataset(&apos;ds_G5&apos;,
			new Array(&apos;idLan&apos;, &apos;numero_solicitacao&apos;, &apos;email_solicitante&apos;, &apos;copia_email_solicitante&apos;),
			new Array(
				DatasetFactory.createConstraint(&apos;sqlLimit&apos;, &apos;1&apos;, &apos;1&apos;, ConstraintType.MUST),
				DatasetFactory.createConstraint(&apos;idLan&apos;, idLan, idLan, ConstraintType.MUST)
			),
			new Array(&apos;numero_solicitacao;desc&apos;)
		);
		if (datasetDs_G5 &amp;&amp; datasetDs_G5.rowsCount &gt; 0) return datasetDs_G5;
	}
	return false;
}






</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>actionsRM</eventId>
        <processId>G7</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>/**&#xd;
* A API de autenticação da Totvs baseia no &quot;Basic access authentication&quot; do HTTP.&#xd;
* Código Java para autenticação &#xd;
* Programa responsável por integrar com os Web services do RM &#xd;
*  Exemplo dev valores para os parâmetros &#xd;
* @param {String} user nome de usuário&#xd;
* @param {String} pass senha do usuário &#xd;
* @param {String} serviceRM nome do serviço cadastrado no painel de controle&#xd;
* @param {String} instance instância do serviço &quot;com.totvs.WsDataServer&quot;&#xd;
* @param {String} authClient instância do serviço de autenticação &quot;com.totvs.IwsDataServer&quot;&#xd;
* @returns parâmetros de autenticação&#xd;
*/&#xd;
function getWebService(user, pass, serviceRM, instance, authClient) {&#xd;
	var dataServerService = ServiceManager.getServiceInstance(serviceRM);&#xd;
	if (dataServerService == null) {&#xd;
		throw &quot;Serviço nao encontrado: &quot; + serviceRM;&#xd;
	}&#xd;
	var serviceLocator = dataServerService.instantiate(instance);&#xd;
	if (serviceLocator == null) {&#xd;
		throw &quot;Instancia do serviço nao encontrada: &quot; + serviceRM + &quot; - &quot; + instance;&#xd;
	}&#xd;
	var service = serviceLocator.getRMIwsDataServer();&#xd;
	if (service == null) {&#xd;
		throw &quot;Instancia do dataserver do invalida: &quot; + serviceRM + &quot; - &quot; + instance;&#xd;
	}&#xd;
	var serviceHelper = dataServerService.getBean();&#xd;
	if (serviceHelper == null) {&#xd;
		throw &quot;Instancia do service helper invalida: &quot; + serviceRM + &quot; - &quot; + instance;&#xd;
	}&#xd;
	var authService = serviceHelper.getBasicAuthenticatedClient(service, authClient, user, pass);&#xd;
	if (serviceHelper == null) {&#xd;
		throw &quot;Instancia do auth service invalida: &quot; + serviceRM + &quot; - &quot; + instance;&#xd;
	}&#xd;
	return authService;&#xd;
}&#xd;
function dcReadView(dataServerName, context, user, pass, filter) {&#xd;
	// carrega o webservice...&#xd;
	var authService = getWebService(user, pass);&#xd;
	// lê os dados da visão respeitando o filter passado&#xd;
	var viewData = new String(authService.readView(dataServerName, filter, context));&#xd;
	return viewData;&#xd;
}&#xd;
function dcReadRecord(dataServerName, context, user, pass, primaryKey) {&#xd;
	// carrega o webservice...&#xd;
	var authService = getWebService(user, pass);&#xd;
	// lê os dados do registro respeitando a pk passada&#xd;
	try {&#xd;
		var recordData = new String(authService.readRecord(dataServerName, primaryKey, context));&#xd;
	}&#xd;
	catch (e) {&#xd;
		var recordData = new String(authService.getSchema(dataServerName, context));&#xd;
	}&#xd;
	return recordData;&#xd;
}&#xd;
function dcSaveRecord(dataServerName, context, user, pass, xml) {&#xd;
	// carrega o webservice...&#xd;
	var authService = getWebService(user, pass);&#xd;
	// salva o registro de acordo com o xml passado&#xd;
	var pk = new String(authService.readRecord(dataServerName, xml, context));&#xd;
	return pk;&#xd;
}&#xd;
&#xd;
//Transforma o conceito de constraints do Fluig para o filter do TBC.&#xd;
function parseConstraints(constraints, filterRequired) {&#xd;
	// inicializa o resultado...&#xd;
	var result = [];&#xd;
	result.context = &quot;&quot;;&#xd;
	// inicializa o filter...&#xd;
	var filter = &quot;&quot;;&#xd;
	// varre as contraints...&#xd;
	for (con in constraints) {&#xd;
		var fieldName = con.getFieldName().toUpperCase();&#xd;
		if (fieldName == &quot;RMSCONTEXT&quot;) {&#xd;
			result.context = con.getInitialValue();&#xd;
			continue;&#xd;
		}&#xd;
		filter += &quot;(&quot;;&#xd;
		if (fieldName == &quot;RMSFILTER&quot;) {&#xd;
			filter += con.getInitialValue();&#xd;
		}&#xd;
		else {&#xd;
			if (con.getInitialValue() == con.getFinalValue() || isEmpty(con.getFinalValue())) {&#xd;
				filter += con.getFieldName();&#xd;
				var isLike = false;&#xd;
				switch (con.getConstraintType()) {&#xd;
					case ConstraintType.MUST:&#xd;
						filter += &quot; = &quot;;&#xd;
						break;&#xd;
					case ConstraintType.MUST_NOT:&#xd;
						filter += &quot; = &quot;;&#xd;
						break;&#xd;
					case ConstraintType.SHOULD:&#xd;
						filter += &quot; LIKE &quot;;&#xd;
						isLike = true;&#xd;
						break;&#xd;
					case ConstraintType.SHOULD_NOT:&#xd;
						filter += &quot; NOT LIKE &quot;;&#xd;
						isLike = true;&#xd;
						break;&#xd;
				}&#xd;
				filter += getFormattedValue(con.getInitialValue(), isLike);&#xd;
			}&#xd;
			else {&#xd;
				filter += con.getFieldName();&#xd;
				filter += &quot; BETWEEN &quot;;&#xd;
				filter += getFormattedValue(con.getInitialValue(), false);&#xd;
				filter += &quot; AND &quot;;&#xd;
				filter += getFormattedValue(con.getFinalValue(), false);&#xd;
			}&#xd;
		}&#xd;
		filter += &quot;) AND &quot;;&#xd;
	}&#xd;
	if (filter.length == 0) {&#xd;
		if (filterRequired) {&#xd;
			filter = &quot;1=1&quot;;&#xd;
		}&#xd;
		else {&#xd;
			filter = &quot;1=1&quot;;&#xd;
		}&#xd;
	}&#xd;
	else filter = filter.substring(0, filter.length - 5);&#xd;
	// guarda o filter...&#xd;
	result.filter = filter;&#xd;
	// retorna o resultado...&#xd;
	return result;&#xd;
}&#xd;
function isEmpty(str) {&#xd;
	return (!str || 0 === str.length);&#xd;
}&#xd;
function getFormattedValue(value, isLike) {&#xd;
	if (isLike) { return &quot;&apos;%&quot; + value + &quot;%&apos;&quot;; }&#xd;
	else { return &quot;&apos;&quot; + value + &quot;&apos;&quot;; }&#xd;
}&#xd;
function getXMLFromString(xmlString) {&#xd;
	var factory = javax.xml.parsers.DocumentBuilderFactory.newInstance();&#xd;
	var parser = factory.newDocumentBuilder();&#xd;
	var is = new org.xml.sax.InputSource();&#xd;
	is.setCharacterStream(new java.io.StringReader(xmlString));&#xd;
	return parser.parse(is);&#xd;
}&#xd;
function checkIsPK(result, qtd) {&#xd;
	var lines = result.split(&apos;\r&apos;);&#xd;
	if (lines.length == 1) {&#xd;
		var pk = result.split(&apos;;&apos;);&#xd;
		if (pk.length == qtd) return;&#xd;
	}&#xd;
	throw result;&#xd;
}&#xd;
function ChekExist(result) {&#xd;
	var lines = result.split(&apos;\r&apos;);&#xd;
	if (lines.length &gt; 1) return true;&#xd;
	else return false;&#xd;
}&#xd;
/**&#xd;
 * Trata o XML para evitar que a próximas funções a serem executadas retornem algum erro&#xd;
 * @param {string} params string de integração  &#xd;
 * @returns string de integração sem os cacteres que podem causar algum problema na integração&#xd;
 */&#xd;
function formatStringToXML(params) {&#xd;
	var regexLineR = new RegExp(&quot;\r&quot;, &quot;g&quot;);&#xd;
	var regexLine = new RegExp(&quot;\n&quot;, &quot;g&quot;);&#xd;
	var regexTab = new RegExp(&quot;\t&quot;, &quot;g&quot;);&#xd;
	var regexDspace = new RegExp(&quot;  &quot;, &quot;g&quot;);&#xd;
	var text = params.replace(regexLine, &quot; &quot;);&#xd;
	text = text.replace(regexLineR, &quot; &quot;);&#xd;
	text = text.replace(regexTab, &quot; &quot;);&#xd;
	text = text.replace(regexDspace, &quot; &quot;);&#xd;
	return text = text.trim();&#xd;
}&#xd;
function addItem(text, prevColumnName, newColumn) {&#xd;
	if ((prevColumnName != null) &amp;&amp; (prevColumnName.trim() != &quot;&quot;)) {&#xd;
		var entryPoint = text.indexOf(prevColumnName);&#xd;
		return text.substr(0, entryPoint) + newColumn + text.substr(entryPoint);;&#xd;
	}&#xd;
	else {&#xd;
		return text&#xd;
	};&#xd;
}&#xd;
function replaceValue(text, columnName, newValue) {&#xd;
	newValue = String(newValue);&#xd;
	if ((newValue != null) &amp;&amp; (newValue.trim() != &quot;&quot;)) {&#xd;
		var regex = new RegExp(&quot;&lt;&quot; + columnName + &quot;&gt;(.*?)&lt;\\/&quot; + columnName + &quot;&gt;&quot;, &quot;g&quot;);&#xd;
		var replaceText = &quot;&lt;&quot; + columnName + &quot;&gt;&quot; + newValue + &quot;&lt;/&quot; + columnName + &quot;&gt;&quot;;&#xd;
		return text.replace(regex, replaceText);&#xd;
	}&#xd;
	else return text;&#xd;
}&#xd;
function removeValue(text, columnName) {&#xd;
	var regex = new RegExp(&quot;&lt;&quot; + columnName + &quot;&gt;(.*?)&lt;\\/&quot; + columnName + &quot;&gt;&quot;, &quot;g&quot;);&#xd;
	var replaceText = &quot;&lt;&quot; + columnName + &quot;&gt;&lt;/&quot; + columnName + &quot;&gt;&quot;;&#xd;
	return text.replace(regex, replaceText);&#xd;
}&#xd;
function removeNode(text, columnName) {&#xd;
	var regex = new RegExp(&quot;&lt;&quot; + columnName + &quot;&gt;(.*?)&lt;\\/&quot; + columnName + &quot;&gt;&quot;, &quot;g&quot;);&#xd;
	var replaceText = &quot;&quot;;&#xd;
	return text.replace(regex, replaceText);&#xd;
}&#xd;
function isEmpty(str) {&#xd;
	return (!str || 0 === str.length);&#xd;
}&#xd;
function getNodeValue(text, columnName) {&#xd;
	var regex = new RegExp(&quot;&lt;&quot; + columnName + &quot;&gt;(.*?)&lt;/&quot; + columnName + &quot;&gt;&quot;);&#xd;
	var match = text.match(regex);&#xd;
	return match ? match[1] : null;&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>C0C0C0</color>
      <height>551</height>
      <width>1351</width>
      <positionX>10</positionX>
      <positionY>13</positionY>
      <stateName>G7 - Manutenção de comprovantes</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>183</height>
      <width>1321</width>
      <positionX>40</positionX>
      <positionY>13</positionY>
      <stateName>1-RM</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>185</height>
      <width>1321</width>
      <positionX>40</positionX>
      <positionY>379</positionY>
      <stateName>2-Fluig</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>FFFFFF</color>
      <height>183</height>
      <width>1321</width>
      <positionX>40</positionX>
      <positionY>196</positionY>
      <stateName>3-Gestores</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <linkSequence>20</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>535</positionX>
      <positionY>152</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <linkSequence>20</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>535</positionX>
      <positionY>409</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <linkSequence>34</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1101</positionX>
      <positionY>65</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <linkSequence>40</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>1055</positionX>
      <positionY>408</positionY>
    </ProcessLinkBend>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <linkSequence>40</linkSequence>
        <bendSequence>2</bendSequence>
      </processLinkBendPK>
      <positionX>1055</positionX>
      <positionY>141</positionY>
    </ProcessLinkBend>
  </list>
  <list>
    <ProcessStateTrigger>
      <processStateTriggerPK>
        <companyId>1</companyId>
        <processId>G7</processId>
        <version>288</version>
        <stateSequence>16</stateSequence>
        <triggerSequence>0</triggerSequence>
      </processStateTriggerPK>
      <runType>1</runType>
      <type>0</type>
      <value>&lt;BpmnMessageData&gt;&lt;Type&gt;2&lt;/Type&gt;&lt;Receiver&gt;email_solicitante&lt;/Receiver&gt;&lt;Subject&gt;Teste&lt;/Subject&gt;&lt;Content&gt;teste&lt;/Content&gt;&lt;/BpmnMessageData&gt;</value>
      <frequencia>01</frequencia>
    </ProcessStateTrigger>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>G7</processId>
      <version>1</version>
      <sequence>30</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>G7</processId>
      <version>1</version>
      <sequence>41</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
    <ProcessStateService>
      <companyId>1</companyId>
      <processId>G7</processId>
      <version>1</version>
      <sequence>56</sequence>
      <attempts>0</attempts>
      <sucessFullMessage>Integração executada com sucesso</sucessFullMessage>
      <serviceName></serviceName>
      <frequency>1</frequency>
      <frequencyType>0</frequencyType>
    </ProcessStateService>
  </list>
  <list/>
  <list/>
  <list/>
  <list>
    <ConditionProcessAutomaticRules>
      <sequence>17</sequence>
      <expressionOrder>1</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>solicitacao_origem</field>
      <value></value>
      <operator>9</operator>
      <valueType>0</valueType>
    </ConditionProcessAutomaticRules>
    <ConditionProcessAutomaticRules>
      <sequence>17</sequence>
      <expressionOrder>2</expressionOrder>
      <ruleOrder>1</ruleOrder>
      <field>solicitacao_origem</field>
      <value></value>
      <operator>0</operator>
      <valueType>0</valueType>
    </ConditionProcessAutomaticRules>
  </list>
</list>